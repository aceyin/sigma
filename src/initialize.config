%% =========================================================================================
%% @doc
%% 系统启动时的初始化过程的配置
%% # 参数说明
%% * mfa:     需要被启动的 supervisor 模块名, 初始化函数, 以及参数
%% * restart: 定义了当该模块终止后的重启策略, 可选值:
%%            permanent - 该模块总是会被重启
%%            temporary - 该模块不会被重启
%%            transient - 只有在该模块被非正常终止时才会被重启, 即:
%%                        终止原因除了 normal, shutdown 或 {shutdown, Reason} 之外的情况
%% * shutdown: 定义了该模块的停止策略, 可选值:
%%             brutal_kill - 意味着子进程使用exit（Child，kill）无条件终止。
%%             非负整数     - 父进程通过调用exit（Child，shutdown）告诉子进程终止，然后等待返回退出信号。
%%                           如果在指定时间内没有收到退出信号，则使用exit（Child，kill）无条件终止子进程。
%%             infinity    - 如果子进程是另一个 supervisor，则必须将其设置为 infinity 以便给子树足够的
%%                           时间来关闭。如果子进程是工作进程，也可以将其设置为无穷大。
%% @end
%% =========================================================================================

%% ::::::::::::::::::::::::::::::: 随系统启动的 supervisor 配置 :::::::::::::::::::::::::::::::
%% * 简要配置: #{mfa => {module, fun, args}}
%% * 详细配置: #{mfa => {module, fun, args}, restart => restart()}
{ supervisors, [
  % 测试网络的模块
  #{mfa => {echo_sup, start_link, []}}
]}.

%% ::::::::::::::::::::::::::::::: 随系统启动的 gen_server 配置 :::::::::::::::::::::::::::::::
{servers, [

]}.